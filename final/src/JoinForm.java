
import member.FavPayDAO;
import member.UserDAO;
import member.FavMenuDAO;
import member.User;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */

public class JoinForm extends javax.swing.JFrame {
    /**
     * Creates new form MainFrame
     */
    public JoinForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblJoin = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblPasswordCheck = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnCheckOverID = new javax.swing.JButton();
        btnJoin = new javax.swing.JButton();
        lblMenu = new javax.swing.JLabel();
        cbxKor = new javax.swing.JCheckBox();
        cbxSchool = new javax.swing.JCheckBox();
        cbxChina = new javax.swing.JCheckBox();
        cbxJapan = new javax.swing.JCheckBox();
        cbxAmerica = new javax.swing.JCheckBox();
        cbxDessert = new javax.swing.JCheckBox();
        lblBirth = new javax.swing.JLabel();
        lblPay = new javax.swing.JLabel();
        cmbYear = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPay = new javax.swing.JList<>();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordCheck = new javax.swing.JPasswordField();
        cmbMonth = new javax.swing.JComboBox<>();
        cmbDay = new javax.swing.JComboBox<>();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnCheckOverEmail = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblJoin.setFont(new java.awt.Font("굴림", 1, 24)); // NOI18N
        lblJoin.setText("회원 가입");

        lblID.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblID.setText("*아이디");

        lblPassword.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblPassword.setText("*비밀번호");

        lblPasswordCheck.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblPasswordCheck.setText("*비밀번호 확인");

        lblName.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblName.setText("*성명");

        btnCheckOverID.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btnCheckOverID.setText("중복 확인");
        btnCheckOverID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOverIDActionPerformed(evt);
            }
        });

        btnJoin.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btnJoin.setText("가입하기");
        btnJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinActionPerformed(evt);
            }
        });

        lblMenu.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblMenu.setText("관심 메뉴");

        cbxKor.setText("한식");

        cbxSchool.setText("분식");

        cbxChina.setText("중식");

        cbxJapan.setText("일식");

        cbxAmerica.setText("양식");

        cbxDessert.setText("디저트");

        lblBirth.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblBirth.setText("*생년월일");

        lblPay.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblPay.setText("선호 결제 방법");

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        listPay.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "현금", "카드", "무통장입금" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listPay);

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        lblEmail.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        lblEmail.setText("*이메일");

        btnCheckOverEmail.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btnCheckOverEmail.setText("중복 확인");
        btnCheckOverEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOverEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMenu)
                                    .addComponent(lblBirth)
                                    .addComponent(lblPay))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(cbxKor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cbxJapan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cbxAmerica)
                                                    .addComponent(cbxSchool)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbxDessert)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(cbxChina))
                                            .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(btnJoin))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(lblJoin)))
                        .addGap(0, 99, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblID)
                            .addComponent(lblPassword)
                            .addComponent(lblPasswordCheck)
                            .addComponent(lblName)
                            .addComponent(lblEmail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID)
                            .addComponent(txtName)
                            .addComponent(txtPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCheckOverID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCheckOverEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblJoin)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckOverID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPasswordCheck)
                    .addComponent(txtPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckOverEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirth)
                    .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMenu)
                    .addComponent(cbxKor)
                    .addComponent(cbxSchool)
                    .addComponent(cbxChina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxJapan)
                    .addComponent(cbxAmerica)
                    .addComponent(cbxDessert))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPay)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnJoin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean idCheck = false; //false: 아이디 중복이거나 중복검사 안함, true:아이디 중복 아님
    boolean emailCheck = false; //false: 이메일 중복이거나 중복검사 안함, true:이메일 중복 아님
    
    private void btnCheckOverIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOverIDActionPerformed
        //아이디 중복 확인
        UserDAO userDAO = new UserDAO();
        int result = userDAO.checkUserID(txtID.getText().trim());
       
        if(result == 1){//중복 아이디 존재
            JOptionPane.showMessageDialog(null, "중복된 아이디가 존재합니다.");
        }else{
            idCheck=true;
            JOptionPane.showMessageDialog(null, "사용 가능한 아이디 입니다.");
        }
             
    }//GEN-LAST:event_btnCheckOverIDActionPerformed

    
    private void btnJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinActionPerformed

                if(idCheck==false){//아이디 중복 확인을 안 했거나, 아이디가 중복일 경우에 해당
                    JOptionPane.showMessageDialog(null, "아이디 중복 확인을 해주세요.");
                }else if(emailCheck==false){//이메일 중복 확인을 안 했거나, 이메일이 중복일 경우에 해당
                    JOptionPane.showMessageDialog(null, "이메일 중복 확인을 해주세요.");
                }else{ //아이디, 이메일 중복이 아닐 때
                    //비밀번호 일치 확인
                    if(!txtPassword.getText().trim().equals(txtPasswordCheck.getText().trim())){
                        JOptionPane.showMessageDialog(null, "비밀번호가 틀립니다.");
                    }else{ //비밀번호 입력이 일치할 때
                        //생년월일 포맷 지정
                        String birth = cmbYear.getSelectedItem().toString() + "-" + cmbMonth.getSelectedItem().toString()
                                + "-" + cmbDay.getSelectedItem().toString(); //년-월-일
                        
                        //사용자 인스턴스 생성 후 회원가입 진행
                        UserDAO userDAO = new UserDAO();
                        User user = new User();
                        
                        user.setUserID(txtID.getText().trim());
                        user.setUserName(txtName.getText().trim());
                        user.setUserPassword(txtPassword.getText().trim());
                        user.setUserBirth(birth);
                        user.setUserEmail(txtEmail.getText().trim());
                        
                        //관심메뉴 처리
                        String menu = "";
                        if(cbxKor.isSelected()) menu += cbxKor.getText() +",";
                        if(cbxSchool.isSelected()) menu += cbxSchool.getText() +",";
                        if(cbxChina.isSelected()) menu += cbxChina.getText() +",";
                        if(cbxJapan.isSelected()) menu += cbxJapan.getText() +",";
                        if(cbxAmerica.isSelected()) menu += cbxAmerica.getText() +",";
                        if(cbxDessert.isSelected()) menu += cbxDessert.getText() +",";
                        
                        //선호 결제 방법 처리
                        String payment = null;
                        payment = listPay.getSelectedValue();

                        int result = userDAO.join(user); //회원가입 진행
                        if(result > 0){//회원가입 성공
                            //관심메뉴 추가
                            if(menu != ""){
                                FavMenuDAO menuDAO = new FavMenuDAO();
                                int resultMenu = menuDAO.insertMenu(user.getUserID(), menu);
                                if(resultMenu < 1) JOptionPane.showMessageDialog(null, "관심 메뉴를 처리하는 데 오류가 발생했습니다.");
                            }
                            //선호 결제 방법 추가
                            if(payment != null){
                                FavPayDAO payDAO = new FavPayDAO();
                                int resultPay = payDAO.insertPay(user.getUserID(), payment);
                                if(resultPay < 1) JOptionPane.showMessageDialog(null, "선호 결제 방법을 처리하는 데 오류가 발생했습니다.");
                            }
                        }
                        
                        JOptionPane.showMessageDialog(null, "회원가입에 성공했습니다.");
                        idCheck = false; emailCheck=false;
                        this.dispose();
                    }
                }
    }//GEN-LAST:event_btnJoinActionPerformed

    private void btnCheckOverEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOverEmailActionPerformed
        
        if ((txtEmail.getText().length() < 4) || !txtEmail.getText().contains("@") || !txtEmail.getText().contains(".")) { //이메일 형식 확인
            JOptionPane.showMessageDialog(null, "잘못된 이메일 형식입니다.");
        }else{
            //이메일 중복 확인
            UserDAO userDAO = new UserDAO();
            int result = userDAO.checkUserEmail(txtEmail.getText().trim());

            if(result == 1){//중복 이메일 존재
                JOptionPane.showMessageDialog(null, "이미 가입된 이메일입니다.");
            }else{
                emailCheck=true;
                JOptionPane.showMessageDialog(null, "사용 가능한 이메일 입니다.");
            }
        }
    }//GEN-LAST:event_btnCheckOverEmailActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JoinForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JoinForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JoinForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JoinForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new JoinForm().setVisible(true);
//                
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckOverEmail;
    private javax.swing.JButton btnCheckOverID;
    private javax.swing.JButton btnJoin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbxAmerica;
    private javax.swing.JCheckBox cbxChina;
    private javax.swing.JCheckBox cbxDessert;
    private javax.swing.JCheckBox cbxJapan;
    private javax.swing.JCheckBox cbxKor;
    private javax.swing.JCheckBox cbxSchool;
    private javax.swing.JComboBox<String> cmbDay;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBirth;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblJoin;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordCheck;
    private javax.swing.JLabel lblPay;
    private javax.swing.JList<String> listPay;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordCheck;
    // End of variables declaration//GEN-END:variables
}
